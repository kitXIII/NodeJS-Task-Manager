extends ../layouts/application.pug
include ../mixins/deletionModal.pug
include ../mixins/pagination.pug
block content
  div
    +formFor(f, { url: urlFor('tasks'), classList: ['form', 'd-flex', 'flex-column', 'flex-md-row', 'align-items-md-center', 'justify-content-md-around', 'mb-2', 'mb-md-0'] })
      .col-md-2.mt-md-3.px-0
        if isSignedIn() || true
          .form-check.d-flex.align-items-baseline.mb-2.offset-4.mb-md-0.d-md-block
            - const checked = f.object.myTasksOnly === 'on'
            if checked
              input#filterFormMyTasks.form-check-input(type='checkbox' name='myTasksOnly' checked)
            else
              input#filterFormMyTasks.form-check-input(type='checkbox' name='myTasksOnly')
            label.form-check-label(for='filterFormMyTasks') My tasks only
      .col-md-2.px-0
        +select(f, 'taskStatusId', { list: statusList, formGroupClassList: 'd-flex d-md-block', labelClassList: 'col-4 col-form-label', inputClassList: 'custom-select col-8' })
      .col-md-3.px-0
        +select(f, 'assignedToId', { list: statusList, formGroupClassList: 'd-flex d-md-block', labelClassList: 'col-4 col-form-label', inputClassList: 'custom-select col-8' })
      .col-md-3.px-0
        .form-group.d-flex.align-items-baseline.d-md-block
          label.col-4.col-form-label.d-md-block Tags:
          select.form-control#tagsMultiSelect(name='tags', multiple='multiple')
            each item in tagList
              if item.selected
                option(value=item.id selected)= item.name
              else
                option(value=item.id)= item.name
      .col-md-2.mt-md-3.d-flex.justify-content-end.d-md-block.px-0
        button.btn.btn-outline-primary.btn-sm.mr-2(type='submit' data-tooltip='true' data-placement='bottom' title='Apply filter')
          i.fas.fa-filter
        a.btn.btn-outline-secondary.btn-sm(href=urlFor('tasks') data-tooltip='true' data-placement='bottom' title='Clear filter')
          i.fas.fa-broom
  .table-responsive-md
    table.table.table-stripped
      caption List of tasks
      thead
        tr
          th #
          th Task
          th Status
          th Creator
          th Assigned to
          th Updated
          th
      tbody
        each task in tasks
          tr
            th= task.id
            td= task.name
            td= task.taskStatus.name
            td= task.creator.fullName
            td= task.assignedTo.fullName
            td= task.updated
            td
              a.text-success.mr-3(href=urlFor('task', task.id) data-tooltip='true' data-placement='bottom' title='View  task')
                i.far.fa-eye
              if isSignedIn()
                a.text-info.mr-3(href=urlFor('editTask', task.id) data-tooltip='true' data-placement='bottom'     title='Edit task')
                  i.fas.fa-pen
                a.text-danger(data-toggle='modal' data-target=`#deleteTaskModal${task.id}` data-tooltip='true'    data-placement='bottom' title='Delete task')
                  i.fas.fa-trash-alt
                +deletionModal({ 
                  id:`deleteTaskModal${task.id}`,
                  message: `Are you sure you want to delete task ${task.name}?`,
                  link: urlFor('deleteTask', task.id),
                })
  if isSignedIn()
    .d-flex
      a.btn.btn-success(href=urlFor('newTask') data-tooltip='true' data-placement='bottom' title='Add new task')
        span.d-none.d-md-inline Add &nbsp
        i.fas.fa-plus
  +pagination({ items: navPages, route: 'tasks' })
